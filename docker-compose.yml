version: "3.6"
services:
  swagger-ui:
    #command: "echo Pass"
    ports:
      - 80:8080
    image: swaggerapi/swagger-ui
    #restart: always
    environment:
            URLS: "[{ url: \"http://localhost:8082/v2/api-docs\", name: \"Users\" },{url: \"http://localhost:8081/openapi\", name: \"Inventory\"},
            {url: \"http://localhost:8083/v2/api-docs\", name: \"Security\"} ]"
    links:
      - users
  jaeger:
    #command: "echo Pass"
    image: jaegertracing/all-in-one:1.7
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
  gateway:
    command: "echo Pass"
    build:
      context: ./gateway/
    ports:
      - 8080:8080
    links:
      - jaeger
      - users
      - inventory
  users:
    command: "echo Pass"
    build:
      context: ./users/
    ports:
      - 8082:8080

  
  inventory:
    command: "echo Pass"
    build:
      context: ./inventory/
    ports:
      - 8081:8080
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_SERVICE_NAME=inventory
      - JAEGER_REPORTER_LOG_SPANS=false
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
      - JAEGER_PROPAGATION=b3
    links:
      - jaeger
      - users
  security:
    command: "echo Pass"
    build:
      context: ./security/
    ports:
      - 8083:8080
    links:
      - jaeger

  searches:
    #command: "echo Pass"
    restart: always
    build:
      context: ./searches/
    ports:
      - 8085:8000
    depends_on:
      - "films"
    links:
      - films
      - jaeger
      - db
  films:
    #command: "echo Pass"
    restart: always
    build:
      context: ./films/
    ports:
      - 8084:5000
    depends_on:
      - "db"
    links:
      - db
      - jaeger
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=example
  db:
    container_name: postgres
    image: postgres:latest
    ports:
      - 5432:5432  
    volumes:
      - db_volume:/var/lib/postgresql
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=example

volumes:
  db_volume:
    external: true